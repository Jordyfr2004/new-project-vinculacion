"use client";
import Cookies from "js-cookie";
import { useRouter } from "next/navigation";
import { useEffect } from "react";
import { jwtDecode } from "jwt-decode";

interface JWTPayload {
  sub: string;
  email: string;
  rol: string;
  exp?: number;
}

export default function HomeR() {
  const router = useRouter();

  useEffect(() => {
    try {
      const token = Cookies.get("token") || "";
      if (!token) {
        router.push("/");
        return;
      }

      const decoded = jwtDecode<JWTPayload>(token);

      // validar expiraciÃ³n si viene
      if (decoded.exp && decoded.exp * 1000 < Date.now()) {
        Cookies.remove("token");
        router.push("/");
        return;
      }

      // validar rol
      if (decoded.rol !== "receptor") {
        router.push("/");
        return;
      }
    } catch (err) {
      console.error(err);
      Cookies.remove("token");
      router.push("/");
    }
  }, [router]);

  const handleLogout = () => {
    Cookies.remove("token");
    router.push("/");
  };

  return (
    <div className="min-h-screen flex flex-col items-center justify-center text-center">
      <h1 className="text-3xl font-bold mb-4">Bienvenido Receptor ðŸŽ‰</h1>
      <button
        onClick={handleLogout}
        className="px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700 transition"
      >
        Cerrar sesiÃ³n
      </button>
    </div>
  );
}
 
